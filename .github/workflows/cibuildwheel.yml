name: Build and upload to PyPI

on:
  push:
  workflow_dispatch:
    inputs:
      wip:
        description: 'Publish work in progress package.'
        required: false
        default: 'true'
      image:
        description: 'Manylinux image to use.'
        required: false
        default: 'manylinux2014_x86_64'

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Adjust version (wip))
        if: ${{ github.event.inputs.wip == 'true' }}
        run: python .github/adjust_version.py --source

      - name: Adjust version (release)
        if: ${{ github.event.inputs.wip == 'false' }}
        run: python .github/adjust_version.py --release --source

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    needs: [build_sdist]
    name: Build wheels on ${{ matrix.cfg.os }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      matrix:
        cfg:
          - os: ubuntu-20.04
            env:
              CIBW_ARCHS_LINUX: x86_64
              CIBW_BUILD: "*-manylinux-*"
          - os: ubuntu-20.04
            env:
              CIBW_ARCHS_LINUX: x86_64
              CIBW_BUILD: "*-musllinux-*"

#       os: [ubuntu-20.04, windows-2019, macos-11]
#       archs_linux: [x86_64, i686, aarch64, ppc64le]
#       build: ['*', "*-manylinux-*", "*-musllinux-*", "cp*-win*"]
#       exclude:
#         - os: ubuntu-20.04
#           build: "cp*-win*"
#         - os: ubuntu-20.04
#           build: "*"
#         - os: windows-2019
#           build: '*'
#         - os: windows-2019
#           build: "*-manylinux-*"
#         - os: windows-2019
#           build: "*-musllinux-*"
#         - os: macos-11
#           build: '*'
#         - os: macos-11
#           build: "*-manylinux-*"
#         - os: macos-11
#           build: "*-musllinux-*"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Adjust version (wip))
        if: ${{ github.event.inputs.wip == 'true' }}
        run: python .github/adjust_version.py

      - name: Adjust version (release)
        if: ${{ github.event.inputs.wip == 'false' }}
        run: python .github/adjust_version.py --release

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.0
        env: ${{ matrix.cfg.env }}

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

# upload_pypi:
#   needs: [build_wheels, build_sdist]
#   runs-on: ubuntu-latest
#   # upload to PyPI on every tag starting with 'v'
#   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#   # alternatively, to publish when a GitHub Release is created, use the following rule:
#   # if: github.event_name == 'release' && github.event.action == 'published'
#   steps:
#     - uses: actions/download-artifact@v3
#       with:
#         # unpacks default artifact into dist/
#         # if `name: artifact` is omitted, the action will create extra parent dir
#         name: artifact
#         path: dist
#
#     - uses: pypa/gh-action-pypi-publish@v1.5.0
#       with:
#         user: __token__
#         password: ${{ secrets.pypi_password }}
#         # To test: repository_url: https://test.pypi.org/legacy/
